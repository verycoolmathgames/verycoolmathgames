{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst constants_1 = require(\"./constants\");\n\nconst filter_1 = require(\"./filter\");\n\nclass MetadataStatusFilter extends filter_1.BaseFilter {\n  async receiveTrailers(status) {\n    // tslint:disable-next-line:prefer-const\n    let _ref = await status,\n        code = _ref.code,\n        details = _ref.details,\n        metadata = _ref.metadata;\n\n    if (code !== constants_1.Status.UNKNOWN) {\n      // we already have a known status, so don't assign a new one.\n      return {\n        code,\n        details,\n        metadata\n      };\n    }\n\n    const metadataMap = metadata.getMap();\n\n    if (typeof metadataMap['grpc-status'] === 'string') {\n      const receivedCode = Number(metadataMap['grpc-status']);\n\n      if (receivedCode in constants_1.Status) {\n        code = receivedCode;\n      }\n\n      metadata.remove('grpc-status');\n    }\n\n    if (typeof metadataMap['grpc-message'] === 'string') {\n      details = decodeURI(metadataMap['grpc-message']);\n      metadata.remove('grpc-message');\n    }\n\n    return {\n      code,\n      details,\n      metadata\n    };\n  }\n\n}\n\nexports.MetadataStatusFilter = MetadataStatusFilter;\n\nclass MetadataStatusFilterFactory {\n  constructor(channel) {\n    this.channel = channel;\n  }\n\n  createFilter(callStream) {\n    return new MetadataStatusFilter();\n  }\n\n}\n\nexports.MetadataStatusFilterFactory = MetadataStatusFilterFactory;","map":null,"metadata":{},"sourceType":"script"}