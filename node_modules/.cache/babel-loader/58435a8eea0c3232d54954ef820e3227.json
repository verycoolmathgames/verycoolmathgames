{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst pify = require('pify');\n\nconst defaults = {\n  mode: 0o777 & ~process.umask(),\n  fs\n}; // https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\n\nconst checkPath = pth => {\n  if (process.platform === 'win32') {\n    const pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n\n    if (pathHasInvalidWinCharacters) {\n      const err = new Error(\"Path contains invalid characters: \".concat(pth));\n      err.code = 'EINVAL';\n      throw err;\n    }\n  }\n};\n\nmodule.exports = (input, opts) => Promise.resolve().then(() => {\n  checkPath(input);\n  opts = Object.assign({}, defaults, opts);\n  const mkdir = pify(opts.fs.mkdir);\n  const stat = pify(opts.fs.stat);\n\n  const make = pth => {\n    return mkdir(pth, opts.mode).then(() => pth).catch(err => {\n      if (err.code === 'ENOENT') {\n        if (err.message.includes('null bytes') || path.dirname(pth) === pth) {\n          throw err;\n        }\n\n        return make(path.dirname(pth)).then(() => make(pth));\n      }\n\n      return stat(pth).then(stats => stats.isDirectory() ? pth : Promise.reject()).catch(() => {\n        throw err;\n      });\n    });\n  };\n\n  return make(path.resolve(input));\n});\n\nmodule.exports.sync = (input, opts) => {\n  checkPath(input);\n  opts = Object.assign({}, defaults, opts);\n\n  const make = pth => {\n    try {\n      opts.fs.mkdirSync(pth, opts.mode);\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        if (err.message.includes('null bytes') || path.dirname(pth) === pth) {\n          throw err;\n        }\n\n        make(path.dirname(pth));\n        return make(pth);\n      }\n\n      try {\n        if (!opts.fs.statSync(pth).isDirectory()) {\n          throw new Error('The path is not a directory');\n        }\n      } catch (_) {\n        throw err;\n      }\n    }\n\n    return pth;\n  };\n\n  return make(path.resolve(input));\n};","map":null,"metadata":{},"sourceType":"script"}