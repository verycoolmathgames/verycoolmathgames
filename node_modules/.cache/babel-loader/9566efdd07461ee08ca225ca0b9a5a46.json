{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCxRTkWjoToUoNsM8Rm6zPwiJBG_JCB4fo\",\n  authDomain: \"verycoolthanksforsharing.firebaseapp.com\",\n  databaseURL: \"https://verycoolthanksforsharing.firebaseio.com\",\n  projectId: \"verycoolthanksforsharing\",\n  storageBucket: \"verycoolthanksforsharing.appspot.com\",\n  messagingSenderId: \"78626384450\",\n  appId: \"1:78626384450:web:1180655f768563c9\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.firestore();\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  async register(name, email, password) {\n    await this.auth.createUserWithEmailAndPassword(email, password);\n    return this.auth.currentUser.updateProfile({\n      displayName: name\n    });\n  }\n\n  addQuote(quote) {\n    if (!this.auth.currentUser) {\n      return alert('Not authorized');\n    }\n\n    return this.db.doc(\"users_codedamn_video/\".concat(this.auth.currentUser.uid)).set({\n      quote\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  }\n\n  async getCurrentUserQuote() {\n    const quote = await this.db.doc(\"users_codedamn_video/\".concat(this.auth.currentUser.uid)).get();\n    return quote.get('quote');\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["C:\\Users\\md_sh\\OneDrive\\Desktop\\verycoolmathgames.github.io\\src\\components\\firebase.js"],"names":["app","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","constructor","initializeApp","auth","db","firestore","login","email","password","signInWithEmailAndPassword","logout","signOut","register","name","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","addQuote","quote","alert","doc","uid","set","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getCurrentUserQuote","get"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,WAAP;AAEA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,MAAM,EAAE,yCADc;AAEtBC,EAAAA,UAAU,EAAE,0CAFU;AAGtBC,EAAAA,WAAW,EAAE,iDAHS;AAItBC,EAAAA,SAAS,EAAE,0BAJW;AAKtBC,EAAAA,aAAa,EAAE,sCALO;AAMtBC,EAAAA,iBAAiB,EAAE,aANG;AAOtBC,EAAAA,KAAK,EAAE;AAPe,CAAvB;;AAUA,MAAMC,QAAN,CAAe;AACdC,EAAAA,WAAW,GAAG;AACbV,IAAAA,GAAG,CAACW,aAAJ,CAAkBV,cAAlB;AACA,SAAKW,IAAL,GAAYZ,GAAG,CAACY,IAAJ,EAAZ;AACA,SAAKC,EAAL,GAAUb,GAAG,CAACc,SAAJ,EAAV;AACA;;AAEDC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACtB,WAAO,KAAKL,IAAL,CAAUM,0BAAV,CAAqCF,KAArC,EAA4CC,QAA5C,CAAP;AACA;;AAEDE,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKP,IAAL,CAAUQ,OAAV,EAAP;AACA;;AAED,QAAMC,QAAN,CAAeC,IAAf,EAAqBN,KAArB,EAA4BC,QAA5B,EAAsC;AACrC,UAAM,KAAKL,IAAL,CAAUW,8BAAV,CAAyCP,KAAzC,EAAgDC,QAAhD,CAAN;AACA,WAAO,KAAKL,IAAL,CAAUY,WAAV,CAAsBC,aAAtB,CAAoC;AAC1CC,MAAAA,WAAW,EAAEJ;AAD6B,KAApC,CAAP;AAGA;;AAEDK,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACf,QAAG,CAAC,KAAKhB,IAAL,CAAUY,WAAd,EAA2B;AAC1B,aAAOK,KAAK,CAAC,gBAAD,CAAZ;AACA;;AAED,WAAO,KAAKhB,EAAL,CAAQiB,GAAR,gCAAoC,KAAKlB,IAAL,CAAUY,WAAV,CAAsBO,GAA1D,GAAiEC,GAAjE,CAAqE;AAC3EJ,MAAAA;AAD2E,KAArE,CAAP;AAGA;;AAEDK,EAAAA,aAAa,GAAG;AACf,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC7B,WAAKvB,IAAL,CAAUwB,kBAAV,CAA6BD,OAA7B;AACA,KAFM,CAAP;AAGA;;AAEDE,EAAAA,kBAAkB,GAAG;AACpB,WAAO,KAAKzB,IAAL,CAAUY,WAAV,IAAyB,KAAKZ,IAAL,CAAUY,WAAV,CAAsBE,WAAtD;AACA;;AAED,QAAMY,mBAAN,GAA4B;AAC3B,UAAMV,KAAK,GAAG,MAAM,KAAKf,EAAL,CAAQiB,GAAR,gCAAoC,KAAKlB,IAAL,CAAUY,WAAV,CAAsBO,GAA1D,GAAiEQ,GAAjE,EAApB;AACA,WAAOX,KAAK,CAACW,GAAN,CAAU,OAAV,CAAP;AACA;;AA7Ca;;AAgDf,eAAe,IAAI9B,QAAJ,EAAf","sourcesContent":["import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/'\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyCxRTkWjoToUoNsM8Rm6zPwiJBG_JCB4fo\",\n\tauthDomain: \"verycoolthanksforsharing.firebaseapp.com\",\n\tdatabaseURL: \"https://verycoolthanksforsharing.firebaseio.com\",\n\tprojectId: \"verycoolthanksforsharing\",\n\tstorageBucket: \"verycoolthanksforsharing.appspot.com\",\n\tmessagingSenderId: \"78626384450\",\n\tappId: \"1:78626384450:web:1180655f768563c9\"\n}\n\nclass Firebase {\n\tconstructor() {\n\t\tapp.initializeApp(firebaseConfig)\n\t\tthis.auth = app.auth()\n\t\tthis.db = app.firestore()\n\t}\n\n\tlogin(email, password) {\n\t\treturn this.auth.signInWithEmailAndPassword(email, password)\n\t}\n\n\tlogout() {\n\t\treturn this.auth.signOut()\n\t}\n\n\tasync register(name, email, password) {\n\t\tawait this.auth.createUserWithEmailAndPassword(email, password)\n\t\treturn this.auth.currentUser.updateProfile({\n\t\t\tdisplayName: name\n\t\t})\n\t}\n\n\taddQuote(quote) {\n\t\tif(!this.auth.currentUser) {\n\t\t\treturn alert('Not authorized')\n\t\t}\n\n\t\treturn this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).set({\n\t\t\tquote\n\t\t})\n\t}\n\n\tisInitialized() {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.auth.onAuthStateChanged(resolve)\n\t\t})\n\t}\n\n\tgetCurrentUsername() {\n\t\treturn this.auth.currentUser && this.auth.currentUser.displayName\n\t}\n\n\tasync getCurrentUserQuote() {\n\t\tconst quote = await this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).get()\n\t\treturn quote.get('quote')\n\t}\n}\n\nexport default new Firebase()"]},"metadata":{},"sourceType":"module"}