{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2019 Google LLC\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst status_1 = require(\"./status\");\n\nconst googleError_1 = require(\"./googleError\");\n\nclass OngoingCall {\n  /**\n   * OngoingCall manages callback, API calls, and cancellation\n   * of the API calls.\n   * @param {APICallback=} callback\n   *   The callback to be called asynchronously when the API call\n   *   finishes.\n   * @constructor\n   * @property {APICallback} callback\n   *   The callback function to be called.\n   * @private\n   */\n  constructor(callback) {\n    this.callback = callback;\n    this.completed = false;\n  }\n  /**\n   * Cancels the ongoing promise.\n   */\n\n\n  cancel() {\n    if (this.completed) {\n      return;\n    }\n\n    this.completed = true;\n\n    if (this.cancelFunc) {\n      this.cancelFunc();\n    } else {\n      const error = new googleError_1.GoogleError('cancelled');\n      error.code = status_1.Status.CANCELLED;\n      this.callback(error);\n    }\n  }\n  /**\n   * Call calls the specified function. Result will be used to fulfill\n   * the promise.\n   *\n   * @param {SimpleCallbackFunction} func\n   *   A function for an API call.\n   * @param {Object} argument\n   *   A request object.\n   */\n\n\n  call(func, argument) {\n    if (this.completed) {\n      return;\n    } // tslint:disable-next-line no-any\n\n\n    const canceller = func(argument, (...args) => {\n      this.completed = true;\n      setImmediate(this.callback, ...args);\n    });\n\n    this.cancelFunc = () => canceller.cancel();\n  }\n\n}\n\nexports.OngoingCall = OngoingCall;\n\nclass OngoingCallPromise extends OngoingCall {\n  /**\n   * GaxPromise is GRPCCallbackWrapper, but it holds a promise when\n   * the API call finishes.\n   * @param {Function} PromiseCtor - A constructor for a promise that implements\n   * the ES6 specification of promise.\n   * @constructor\n   * @private\n   */\n  // tslint:disable-next-line variable-name\n  constructor(PromiseCtor) {\n    super();\n    this.promise = new PromiseCtor((resolve, reject) => {\n      this.callback = (err, response, next, rawResponse) => {\n        if (err) {\n          reject(err);\n        } else if (response !== undefined) {\n          resolve([response, next, rawResponse]);\n        } else {\n          throw new googleError_1.GoogleError('Neither error nor response are defined');\n        }\n      };\n    });\n\n    this.promise.cancel = () => {\n      this.cancel();\n    };\n  }\n\n}\n\nexports.OngoingCallPromise = OngoingCallPromise;","map":null,"metadata":{},"sourceType":"script"}